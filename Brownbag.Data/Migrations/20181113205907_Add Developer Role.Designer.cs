// <auto-generated />
using System;
using Brownbag.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Brownbag.Data.Migrations
{
    [DbContext(typeof(ApplicationDataContext))]
    [Migration("20181113205907_Add Developer Role")]
    partial class AddDeveloperRole
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Brownbag.Data.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Rating");

                    b.Property<Guid?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Blogs");

                    b.HasData(
                        new { Id = 1, CreatedBy = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), CreatedDate = new DateTime(2018, 11, 13, 15, 59, 7, 72, DateTimeKind.Local), Rating = 10, Url = "www.microsoft.com" },
                        new { Id = 2, CreatedBy = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), CreatedDate = new DateTime(2018, 11, 13, 15, 59, 7, 74, DateTimeKind.Local), Rating = 9, Url = "www.microsoft.net" },
                        new { Id = 3, CreatedBy = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), CreatedDate = new DateTime(2018, 11, 13, 15, 59, 7, 74, DateTimeKind.Local), Rating = 8, Url = "www.microsoft.org" },
                        new { Id = 4, CreatedBy = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), CreatedDate = new DateTime(2018, 11, 13, 15, 59, 7, 74, DateTimeKind.Local), Rating = 7, Url = "www.google.com" },
                        new { Id = 5, CreatedBy = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), CreatedDate = new DateTime(2018, 11, 13, 15, 59, 7, 74, DateTimeKind.Local), Rating = 6, Url = "www.google.org" },
                        new { Id = 6, CreatedBy = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), CreatedDate = new DateTime(2018, 11, 13, 15, 59, 7, 74, DateTimeKind.Local), Rating = 5, Url = "www.google.net" }
                    );
                });

            modelBuilder.Entity("Brownbag.Data.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId");

                    b.Property<string>("Content");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Title");

                    b.Property<Guid?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Posts");

                    b.HasData(
                        new { Id = 1, BlogId = 1, Content = "Test Content", CreatedBy = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), CreatedDate = new DateTime(2018, 11, 13, 15, 59, 7, 76, DateTimeKind.Local), Title = "Post 1" },
                        new { Id = 2, BlogId = 1, Content = "Test Content", CreatedBy = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), CreatedDate = new DateTime(2018, 11, 13, 15, 59, 7, 76, DateTimeKind.Local), Title = "Post 2" },
                        new { Id = 3, BlogId = 1, Content = "Test Content", CreatedBy = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), CreatedDate = new DateTime(2018, 11, 13, 15, 59, 7, 76, DateTimeKind.Local), Title = "Post 3" },
                        new { Id = 4, BlogId = 2, Content = "Test Content", CreatedBy = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), CreatedDate = new DateTime(2018, 11, 13, 15, 59, 7, 76, DateTimeKind.Local), Title = "Post 4" },
                        new { Id = 5, BlogId = 2, Content = "Test Content", CreatedBy = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), CreatedDate = new DateTime(2018, 11, 13, 15, 59, 7, 76, DateTimeKind.Local), Title = "Post 5" },
                        new { Id = 6, BlogId = 3, Content = "Test Content", CreatedBy = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), CreatedDate = new DateTime(2018, 11, 13, 15, 59, 7, 76, DateTimeKind.Local), Title = "Post 6" },
                        new { Id = 7, BlogId = 4, Content = "Test Content", CreatedBy = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), CreatedDate = new DateTime(2018, 11, 13, 15, 59, 7, 76, DateTimeKind.Local), Title = "Post 7" },
                        new { Id = 8, BlogId = 5, Content = "Test Content", CreatedBy = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), CreatedDate = new DateTime(2018, 11, 13, 15, 59, 7, 76, DateTimeKind.Local), Title = "Post 8" },
                        new { Id = 9, BlogId = 6, Content = "Test Content", CreatedBy = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), CreatedDate = new DateTime(2018, 11, 13, 15, 59, 7, 76, DateTimeKind.Local), Title = "Post 9" }
                    );
                });

            modelBuilder.Entity("Brownbag.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserFullName");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new { Id = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), AccessFailedCount = 0, ConcurrencyStamp = "a179afd9-9b34-4713-8295-a1505340cec7", EmailConfirmed = false, LockoutEnabled = true, NormalizedUserName = "MICROSOFT\\DHRUV", PasswordHash = "", PhoneNumberConfirmed = false, SecurityStamp = "d6775817-bb1a-4d77-8ed7-1d430c91d7f1", TwoFactorEnabled = false, UserFullName = "Dhruv Bhavsar", UserName = "Microsoft\\dhruv" }
                    );
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedName");

                    b.HasKey("Id");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new { Id = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f78"), ConcurrencyStamp = "d6775817-bb1a-4d77-8ed7-1d430c91d7f1", Name = "User", NormalizedName = "USER" },
                        new { Id = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f79"), ConcurrencyStamp = "d6775817-bb1a-4d77-8ed7-1d430c91d7f1", Name = "Administrator", NormalizedName = "ADMINISTRATOR" },
                        new { Id = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f71"), ConcurrencyStamp = "d6775817-bb1a-4d77-8ed7-1d430c91d7f1", Name = "Developer", NormalizedName = "DEVELOPER" }
                    );
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<Guid>("UserId");

                    b.Property<string>("ProviderDisplayName");

                    b.HasKey("LoginProvider", "ProviderKey", "UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new { UserId = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), RoleId = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f79") },
                        new { UserId = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), RoleId = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f78") },
                        new { UserId = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f72"), RoleId = new Guid("2c91c203-6dc2-4428-87fb-cc60a5300f71") }
                    );
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Brownbag.Data.Models.Post", b =>
                {
                    b.HasOne("Brownbag.Data.Models.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Brownbag.Data.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Brownbag.Data.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Brownbag.Data.Models.User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
